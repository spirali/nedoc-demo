$(function() {
    var NEDOC_MODULES = JSON.parse('[["Adapter", "gamegym.adapter", true], ["AllPlayAllPairing", "gamegym.algorithms.tournament", true], ["AlphaZero", "gamegym.algorithms.mcts.alphazero", true], ["AlphaZeroCli", "gamegym.ui.azcli", true], ["ApproxBestResponse", "gamegym.algorithms.bestresponse", true], ["Asymetric3PlayerGomoku", "gamegym.games.atpg", true], ["BestResponse", "gamegym.algorithms.bestresponse", true], ["BlindAdapter", "gamegym.adapter", true], ["BlindStrategy", "gamegym.strategy", true], ["BuildContext", "gamegym.contrib.server.ui", true], ["CardBuilder", "gamegym.contrib.server.ui", true], ["CliStrategy", "gamegym.ui.cli", true], ["ConstStrategy", "gamegym.strategy", true], ["DecodeObservationInvalidData", "gamegym.errors", true], ["DicePoker", "gamegym.games.dicepoker", true], ["DictStrategy", "gamegym.strategy", true], ["Distribution", "gamegym.utils", true], ["Element", "gamegym.contrib.server.ui", true], ["EstimatorAdapter", "gamegym.estimator", true], ["FeatureExtractor", "gamegym.contrib.features", true], ["FullSGDZeroSumValueLearning", "gamegym.contrib.value_learning.value_full_sgd", true], ["Game", "gamegym.game", true], ["GameGymError", "gamegym.errors", true], ["GameGymException", "gamegym.errors", true], ["GameOfChicken", "gamegym.games.matrix", true], ["GameResults", "gamegym.algorithms.tournament", true], ["Gomoku", "gamegym.games.gomoku", true], ["Goofspiel", "gamegym.games.goofspiel", true], ["HashableAdapter", "gamegym.game.SimultaneousGame", true], ["HashableAdapter", "gamegym.games.gomoku.Gomoku", true], ["HashableAdapter", "gamegym.games.goofspiel.Goofspiel", true], ["HistoryFeature", "gamegym.contrib.features", true], ["ImperfectInformationGame", "gamegym.game", true], ["InfoSetExpectedFeatures", "gamegym.contrib.value_learning.expected_features", true], ["InformationSetSampler", "gamegym.algorithms.infosets", true], ["KerasModel", "gamegym.algorithms.mcts.model", true], ["LPZeroSumValueLearning", "gamegym.contrib.value_learning.valuelp", true], ["LimitExceeded", "gamegym.errors", true], ["LinearSuccinctStore", "gamegym.contrib.features", true], ["LinearValueStore", "gamegym.contrib.value_learning.valuestore", true], ["MCCFRBase", "gamegym.algorithms.mccfr", true], ["MatchingPennies", "gamegym.games.matrix", true], ["MatrixGame", "gamegym.games.matrix", true], ["MatrixZeroSumGame", "gamegym.games.matrix", true], ["MctSearch", "gamegym.algorithms.mcts.search", true], ["MctsNode", "gamegym.algorithms.mcts.search", true], ["MctsStrategy", "gamegym.algorithms.mcts.strategy", true], ["Model", "gamegym.algorithms.mcts.model", true], ["Observation", "gamegym.observation", true], ["ObservationNotAvailable", "gamegym.errors", true], ["ObservationSequenceGame", "gamegym.game", true], ["OneCardPoker", "gamegym.games.onecardpoker", true], ["OutcomeMCCFR", "gamegym.algorithms.mccfr", true], ["PerfectInformationGame", "gamegym.game", true], ["PlayInfo", "gamegym.algorithms.stats", true], ["PlayerInfoFeature", "gamegym.contrib.features", true], ["PlayerList", "gamegym.algorithms.tournament", true], ["PrisonersDilemma", "gamegym.games.matrix", true], ["RegretStrategy", "gamegym.algorithms.mccfr", true], ["ReplayBuffer", "gamegym.algorithms.mcts.buffer", true], ["ReplayRecord", "gamegym.algorithms.mcts.buffer", true], ["ReplayRecordBatch", "gamegym.algorithms.mcts.buffer", true], ["RockPaperScissors", "gamegym.games.matrix", true], ["Scoring", "gamegym.games.goofspiel.Goofspiel", true], ["Screen", "gamegym.contrib.server.ui", true], ["Server", "gamegym.contrib.server.server", true], ["SimpleEstimatorAdapter", "gamegym.estimator", true], ["SimultaneousGame", "gamegym.game", true], ["Situation", "gamegym.situation", true], ["SparseSGDLinearValueLearning", "gamegym.contrib.value_learning.valuesgd", true], ["StateInfo", "gamegym.situation", true], ["Strategy", "gamegym.strategy", true], ["StrategyTrace", "gamegym.contrib.strategy_trace", true], ["SymetricKerasModel", "gamegym.algorithms.mcts.model", true], ["TabularStore", "gamegym.contrib.features", true], ["TensorAdapter", "gamegym.adapter", true], ["TensorAdapter", "gamegym.games.atpg.Asymetric3PlayerGomoku", true], ["TensorAdapter", "gamegym.games.gomoku.Gomoku", true], ["TensorShape", "gamegym.adapter", true], ["TextAdapter", "gamegym.adapter", true], ["TextAdapter", "gamegym.game.SimultaneousGame", true], ["TextAdapter", "gamegym.games.gomoku.Gomoku", true], ["TextAdapter", "gamegym.games.goofspiel.Goofspiel", true], ["TicTacToe", "gamegym.games.gomoku", true], ["TreeNode", "gamegym.ui.tree", true], ["UniformStrategy", "gamegym.strategy", true], ["ValueStore", "gamegym.contrib.features", true], ["__init__", "gamegym.adapter.Adapter", false], ["__init__", "gamegym.adapter.TensorAdapter", false], ["__init__", "gamegym.adapter.TensorShape", false], ["__init__", "gamegym.adapter.TextAdapter", false], ["__init__", "gamegym.algorithms.bestresponse.ApproxBestResponse", false], ["__init__", "gamegym.algorithms.bestresponse.BestResponse", false], ["__init__", "gamegym.algorithms.infosets.InformationSetSampler", false], ["__init__", "gamegym.algorithms.mccfr.MCCFRBase", false], ["__init__", "gamegym.algorithms.mccfr.RegretStrategy", false], ["__init__", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["__init__", "gamegym.algorithms.mcts.model.KerasModel", false], ["__init__", "gamegym.algorithms.mcts.model.Model", false], ["__init__", "gamegym.algorithms.mcts.model.SymetricKerasModel", false], ["__init__", "gamegym.algorithms.mcts.search.MctSearch", false], ["__init__", "gamegym.algorithms.mcts.search.MctsNode", false], ["__init__", "gamegym.algorithms.mcts.strategy.MctsStrategy", false], ["__init__", "gamegym.algorithms.stats.PlayInfo", false], ["__init__", "gamegym.algorithms.tournament.AllPlayAllPairing", false], ["__init__", "gamegym.algorithms.tournament.GameResults", false], ["__init__", "gamegym.algorithms.tournament.PlayerList", false], ["__init__", "gamegym.contrib.features.LinearSuccinctStore", false], ["__init__", "gamegym.contrib.features.TabularStore", false], ["__init__", "gamegym.contrib.server.server.Server", false], ["__init__", "gamegym.contrib.server.ui.BuildContext", false], ["__init__", "gamegym.contrib.server.ui.CardBuilder", false], ["__init__", "gamegym.contrib.server.ui.Element", false], ["__init__", "gamegym.contrib.server.ui.Screen", false], ["__init__", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["__init__", "gamegym.contrib.value_learning.expected_features.InfoSetExpectedFeatures", false], ["__init__", "gamegym.contrib.value_learning.value_full_sgd.FullSGDZeroSumValueLearning", false], ["__init__", "gamegym.contrib.value_learning.valuelp.LPZeroSumValueLearning", false], ["__init__", "gamegym.contrib.value_learning.valuesgd.SparseSGDLinearValueLearning", false], ["__init__", "gamegym.contrib.value_learning.valuestore.LinearValueStore", false], ["__init__", "gamegym.estimator.EstimatorAdapter", false], ["__init__", "gamegym.estimator.SimpleEstimatorAdapter", false], ["__init__", "gamegym.game.Game", false], ["__init__", "gamegym.game.SimultaneousGame", false], ["__init__", "gamegym.games.atpg.Asymetric3PlayerGomoku", false], ["__init__", "gamegym.games.dicepoker.DicePoker", false], ["__init__", "gamegym.games.gomoku.Gomoku", false], ["__init__", "gamegym.games.gomoku.TicTacToe", false], ["__init__", "gamegym.games.goofspiel.Goofspiel", false], ["__init__", "gamegym.games.matrix.GameOfChicken", false], ["__init__", "gamegym.games.matrix.MatchingPennies", false], ["__init__", "gamegym.games.matrix.MatrixGame", false], ["__init__", "gamegym.games.matrix.MatrixZeroSumGame", false], ["__init__", "gamegym.games.matrix.PrisonersDilemma", false], ["__init__", "gamegym.games.matrix.RockPaperScissors", false], ["__init__", "gamegym.games.onecardpoker.OneCardPoker", false], ["__init__", "gamegym.strategy.BlindStrategy", false], ["__init__", "gamegym.strategy.ConstStrategy", false], ["__init__", "gamegym.strategy.DictStrategy", false], ["__init__", "gamegym.strategy.Strategy", false], ["__init__", "gamegym.ui.azcli.AlphaZeroCli", false], ["__init__", "gamegym.ui.tree.TreeNode", false], ["__init__", "gamegym.utils.Distribution", false], ["__len__", "gamegym.utils.Distribution", false], ["__repr__", "gamegym.game.Game", false], ["__repr__", "gamegym.games.atpg.Asymetric3PlayerGomoku", false], ["__repr__", "gamegym.games.dicepoker.DicePoker", false], ["__repr__", "gamegym.games.gomoku.Gomoku", false], ["__repr__", "gamegym.games.goofspiel.Goofspiel", false], ["__repr__", "gamegym.games.matrix.MatrixGame", false], ["__repr__", "gamegym.games.onecardpoker.OneCardPoker", false], ["__str__", "gamegym.game.Game", false], ["_add_exploration_noise", "gamegym.algorithms.mcts.search.MctSearch", false], ["_canonicalize_name", "gamegym.adapter.TextAdapter", false], ["_card_seq", "gamegym.games.goofspiel", false], ["_check_empty", "gamegym.games.atpg.Asymetric3PlayerGomoku", false], ["_command_info", "gamegym.ui.azcli.AlphaZeroCli", false], ["_command_sample_play", "gamegym.ui.azcli.AlphaZeroCli", false], ["_command_show", "gamegym.ui.azcli.AlphaZeroCli", false], ["_command_tournament", "gamegym.ui.azcli.AlphaZeroCli", false], ["_command_train", "gamegym.ui.azcli.AlphaZeroCli", false], ["_common_play", "gamegym.game.Game", false], ["_construct", "gamegym.contrib.value_learning.expected_features.InfoSetExpectedFeatures", false], ["_construct_lp", "gamegym.contrib.value_learning.valuelp.LPZeroSumValueLearning", false], ["_create_node", "gamegym.algorithms.mcts.search.MctSearch", false], ["_extent", "gamegym.games.atpg.Asymetric3PlayerGomoku", false], ["_extent", "gamegym.games.gomoku.Gomoku", false], ["_flask_app", "gamegym.contrib.server.server.Server", false], ["_generate_data_shapes", "gamegym.games.gomoku.Gomoku.TensorAdapter", false], ["_generate_shaped_actions", "gamegym.games.gomoku.Gomoku.TensorAdapter", false], ["_generate_shapes", "gamegym.adapter.TensorAdapter", false], ["_generate_shapes", "gamegym.games.atpg.Asymetric3PlayerGomoku.TensorAdapter", false], ["_load_player", "gamegym.ui.azcli.AlphaZeroCli", false], ["_model_dir", "gamegym.ui.azcli.AlphaZeroCli", false], ["_open_by_ext", "gamegym.utils", false], ["_outcome_sampling", "gamegym.algorithms.mccfr.OutcomeMCCFR", false], ["_parse_args", "gamegym.ui.azcli.AlphaZeroCli", false], ["_play_match", "gamegym.algorithms.tournament.PlayerList", false], ["_player", "gamegym.games.dicepoker.DicePoker", false], ["_player", "gamegym.games.onecardpoker.OneCardPoker", false], ["_player_file", "gamegym.ui.azcli.AlphaZeroCli", false], ["_reconstruct_state", "gamegym.algorithms.infosets.InformationSetSampler", false], ["_record_search", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["_select_child_action", "gamegym.algorithms.mcts.search.MctSearch", false], ["_single_search", "gamegym.algorithms.mcts.search.MctSearch", false], ["_start", "gamegym.contrib.server.server.Server", false], ["_strategy", "gamegym.algorithms.bestresponse.BestResponse", false], ["_terminals_under", "gamegym.contrib.value_learning.expected_features.InfoSetExpectedFeatures", false], ["_terminals_under", "gamegym.contrib.value_learning.valuelp.LPZeroSumValueLearning", false], ["_tournament_db", "gamegym.ui.azcli.AlphaZeroCli", false], ["_trace", "gamegym.algorithms.infosets.InformationSetSampler", false], ["_values", "gamegym.games.onecardpoker.OneCardPoker", false], ["actions", "gamegym.situation.Situation", false], ["actions_to_text", "gamegym.adapter.TextAdapter", false], ["adapter", "gamegym", true], ["add", "gamegym.contrib.server.ui.Element", false], ["add_condition", "gamegym.contrib.value_learning.valuelp.LPZeroSumValueLearning", false], ["add_player", "gamegym.algorithms.tournament.PlayerList", false], ["add_record", "gamegym.algorithms.mcts.buffer.ReplayBuffer", false], ["add_result", "gamegym.algorithms.tournament.GameResults", false], ["algorithms", "gamegym", true], ["alphazero", "gamegym.algorithms.mcts", true], ["append", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["approx_exploitability", "gamegym.algorithms.bestresponse", false], ["atpg", "gamegym.games", true], ["azcli", "gamegym.ui", true], ["best_action_max_visits", "gamegym.algorithms.mcts.search.MctSearch", false], ["best_action_softmax", "gamegym.algorithms.mcts.search.MctSearch", false], ["bestresponse", "gamegym.algorithms", true], ["buffer", "gamegym.algorithms.mcts", true], ["build", "gamegym.contrib.server.ui.CardBuilder", false], ["cached", "gamegym.utils", false], ["chance", "gamegym.situation.Situation", false], ["child", "gamegym.ui.tree.TreeNode", false], ["cli", "gamegym.ui", true], ["cliutils", "gamegym.ui", true], ["colored", "gamegym.adapter.TextAdapter", false], ["common_PCA_base", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["common_plot", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["common_random_base", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["compute", "gamegym.algorithms.mccfr.MCCFRBase", false], ["compute", "gamegym.contrib.value_learning.value_full_sgd.FullSGDZeroSumValueLearning", false], ["compute", "gamegym.contrib.value_learning.valuelp.LPZeroSumValueLearning", false], ["compute", "gamegym.contrib.value_learning.valuesgd.SparseSGDLinearValueLearning", false], ["contrib", "gamegym", true], ["create_dot", "gamegym.algorithms.mcts.search.MctSearch", false], ["debug_assert", "gamegym.utils", false], ["decode_actions", "gamegym.adapter.Adapter", false], ["decode_actions", "gamegym.adapter.TensorAdapter", false], ["decode_actions", "gamegym.adapter.TextAdapter", false], ["dicepoker", "gamegym.games", true], ["distribution_from_policy_logits", "gamegym.estimator.EstimatorAdapter", false], ["distribution_from_policy_logits", "gamegym.estimator.SimpleEstimatorAdapter", false], ["do_step", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["draw_board", "gamegym.ui.cliutils", false], ["dummy_estimator", "gamegym.algorithms.mcts.alphazero", false], ["encode_actions", "gamegym.adapter.TensorAdapter", false], ["errors", "gamegym", true], ["estimate", "gamegym.algorithms.mcts.model.KerasModel", false], ["estimate", "gamegym.algorithms.mcts.model.Model", false], ["estimate", "gamegym.algorithms.mcts.model.SymetricKerasModel", false], ["estimator", "gamegym", true], ["expected_features", "gamegym.contrib.value_learning", true], ["exploitability", "gamegym.algorithms.bestresponse", false], ["export_az_play_tree", "gamegym.ui.tree", false], ["export_play_tree", "gamegym.ui.tree", false], ["export_tree_to_html", "gamegym.ui.tree", false], ["features", "gamegym.contrib", true], ["features", "gamegym.contrib.features.FeatureExtractor", false], ["features", "gamegym.contrib.features.HistoryFeature", false], ["features", "gamegym.contrib.features.PlayerInfoFeature", false], ["first_occurences", "gamegym.utils", false], ["fit", "gamegym.algorithms.mcts.model.KerasModel", false], ["fit", "gamegym.algorithms.mcts.model.Model", false], ["flatten", "gamegym.nested", false], ["flatten_array_list", "gamegym.utils", false], ["from_records", "gamegym.algorithms.mcts.buffer.ReplayRecordBatch", false], ["gambit", "gamegym.contrib", true], ["game", "gamegym", true], ["game", "gamegym.algorithms.stats.PlayInfo", false], ["game_payoff", "gamegym.game.SimultaneousGame", false], ["game_payoff", "gamegym.games.matrix.MatrixGame", false], ["games", "gamegym", true], ["generate_pairing", "gamegym.algorithms.tournament.AllPlayAllPairing", false], ["get", "gamegym.contrib.value_learning.valuestore.LinearValueStore", false], ["get_action_aliases", "gamegym.adapter.TextAdapter", false], ["get_batch", "gamegym.algorithms.mcts.buffer.ReplayBuffer", false], ["get_entry", "gamegym.algorithms.mccfr.RegretStrategy", false], ["get_features", "gamegym.games.gomoku.Gomoku", false], ["get_features_shape", "gamegym.games.gomoku.Gomoku", false], ["get_observation", "gamegym.adapter.Adapter", false], ["get_policy", "gamegym.algorithms.mcts.strategy.MctsStrategy", false], ["get_policy", "gamegym.strategy.Strategy", false], ["get_rng", "gamegym.utils", false], ["get_values", "gamegym.contrib.features.LinearSuccinctStore", false], ["get_values", "gamegym.contrib.features.TabularStore", false], ["get_values", "gamegym.contrib.features.ValueStore", false], ["gomoku", "gamegym.games", true], ["goofspiel", "gamegym.games", true], ["goofspiel_feaures_cards", "gamegym.games.goofspiel", false], ["history_indexes", "gamegym.situation.Situation", false], ["info_distribution", "gamegym.algorithms.infosets.InformationSetSampler", false], ["infoset_weight_vec", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["infosets", "gamegym.algorithms", true], ["initial_state", "gamegym.game.Game", false], ["initial_state", "gamegym.game.SimultaneousGame", false], ["initial_state", "gamegym.games.atpg.Asymetric3PlayerGomoku", false], ["initial_state", "gamegym.games.dicepoker.DicePoker", false], ["initial_state", "gamegym.games.gomoku.Gomoku", false], ["initial_state", "gamegym.games.goofspiel.Goofspiel", false], ["initial_state", "gamegym.games.onecardpoker.OneCardPoker", false], ["is_chance", "gamegym.observation.Observation", false], ["is_chance", "gamegym.situation.Situation", false], ["is_chance", "gamegym.situation.StateInfo", false], ["is_terminal", "gamegym.observation.Observation", false], ["is_terminal", "gamegym.situation.Situation", false], ["is_terminal", "gamegym.situation.StateInfo", false], ["items", "gamegym.utils.Distribution", false], ["iteration", "gamegym.contrib.value_learning.valuesgd.SparseSGDLinearValueLearning", false], ["last_estimator", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["load", "gamegym.algorithms.tournament.GameResults", false], ["load", "gamegym.utils", false], ["main", "gamegym.ui.azcli.AlphaZeroCli", false], ["make_input_data_from_observation", "gamegym.algorithms.mcts.model.Model", false], ["make_policy", "gamegym.algorithms.bestresponse.ApproxBestResponse", false], ["make_policy", "gamegym.algorithms.mccfr.RegretStrategy", false], ["make_policy", "gamegym.strategy.ConstStrategy", false], ["make_policy", "gamegym.strategy.DictStrategy", false], ["make_policy", "gamegym.strategy.Strategy", false], ["make_policy", "gamegym.strategy.UniformStrategy", false], ["make_policy", "gamegym.ui.cli.CliStrategy", false], ["make_strategy", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["make_strategy", "gamegym.algorithms.mcts.model.Model", false], ["make_train_input", "gamegym.algorithms.mcts.model.Model", false], ["make_train_policy_target", "gamegym.algorithms.mcts.model.Model", false], ["make_train_value", "gamegym.algorithms.mcts.model.Model", false], ["make_train_value", "gamegym.algorithms.mcts.model.SymetricKerasModel", false], ["matrix", "gamegym.games", true], ["matrix_zerosum_features", "gamegym.games.matrix", false], ["mccfr", "gamegym.algorithms", true], ["mcts", "gamegym.algorithms", true], ["model", "gamegym.algorithms.mcts", true], ["model_index", "gamegym.algorithms.mcts.model.Model", false], ["nested", "gamegym", true], ["new", "gamegym.situation.Situation", false], ["new_chance", "gamegym.situation.StateInfo", false], ["new_player", "gamegym.situation.StateInfo", false], ["new_terminal", "gamegym.situation.StateInfo", false], ["np_uniform", "gamegym.utils", false], ["number_of_models", "gamegym.algorithms.mcts.model.Model", false], ["observation", "gamegym", true], ["observe_data", "gamegym.adapter.Adapter", false], ["observe_data", "gamegym.adapter.BlindAdapter", false], ["observe_data", "gamegym.game.SimultaneousGame.HashableAdapter", false], ["observe_data", "gamegym.game.SimultaneousGame.TextAdapter", false], ["observe_data", "gamegym.games.atpg.Asymetric3PlayerGomoku.TensorAdapter", false], ["observe_data", "gamegym.games.gomoku.Gomoku.HashableAdapter", false], ["observe_data", "gamegym.games.gomoku.Gomoku.TensorAdapter", false], ["observe_data", "gamegym.games.gomoku.Gomoku.TextAdapter", false], ["observe_data", "gamegym.games.goofspiel.Goofspiel.HashableAdapter", false], ["observe_data", "gamegym.games.goofspiel.Goofspiel.TextAdapter", false], ["onecardpoker", "gamegym.games", true], ["parse_strategy", "gamegym.contrib.gambit", false], ["play", "gamegym.contrib.server.server.Server", false], ["play", "gamegym.game.Game", false], ["play", "gamegym.game.ImperfectInformationGame", false], ["play", "gamegym.game.ObservationSequenceGame", false], ["play", "gamegym.game.PerfectInformationGame", false], ["play", "gamegym.situation.Situation", false], ["play_game", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["play_game", "gamegym.contrib.server.server.Server", false], ["play_in_terminal", "gamegym.ui.cli", false], ["play_sequence", "gamegym.game.Game", false], ["play_strategies", "gamegym.algorithms.stats", false], ["play_tournament", "gamegym.algorithms.tournament.PlayerList", false], ["player", "gamegym.situation.Situation", false], ["player_distribution", "gamegym.algorithms.infosets.InformationSetSampler", false], ["player_stats", "gamegym.algorithms.tournament.GameResults", false], ["players", "gamegym.algorithms.tournament.GameResults", false], ["plot_exploitabilities", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["plot_trace", "gamegym.contrib.strategy_trace.StrategyTrace", false], ["policy_logits_from_distribution", "gamegym.estimator.EstimatorAdapter", false], ["policy_logits_from_distribution", "gamegym.estimator.SimpleEstimatorAdapter", false], ["pprint", "gamegym.utils.Distribution", false], ["prefill_replay_buffer", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["probs", "gamegym.utils.Distribution", false], ["records_count", "gamegym.algorithms.mcts.buffer.ReplayBuffer", false], ["register_callback", "gamegym.contrib.server.ui.BuildContext", false], ["register_game", "gamegym.ui.azcli.AlphaZeroCli", false], ["register_model", "gamegym.ui.azcli.AlphaZeroCli", false], ["regret_matching", "gamegym.algorithms.mccfr.RegretStrategy", false], ["regularize", "gamegym.contrib.features.ValueStore", false], ["regularize", "gamegym.contrib.value_learning.valuestore.LinearValueStore", false], ["replay", "gamegym.algorithms.stats.PlayInfo", false], ["reset_stats", "gamegym.algorithms.mcts.buffer.ReplayBuffer", false], ["sample", "gamegym.utils.Distribution", false], ["sample_info", "gamegym.algorithms.infosets.InformationSetSampler", false], ["sample_payoff", "gamegym.algorithms.stats", false], ["sample_player", "gamegym.algorithms.infosets.InformationSetSampler", false], ["sample_state", "gamegym.algorithms.infosets.InformationSetSampler", false], ["sample_value", "gamegym.algorithms.bestresponse.ApproxBestResponse", false], ["sample_with_p", "gamegym.utils", false], ["sample_with_p", "gamegym.utils.Distribution", false], ["sampling", "gamegym.algorithms.mccfr.MCCFRBase", false], ["sampling", "gamegym.algorithms.mccfr.OutcomeMCCFR", false], ["save", "gamegym.algorithms.tournament.GameResults", false], ["search", "gamegym.algorithms.mcts", true], ["search", "gamegym.algorithms.mcts.search.MctSearch", false], ["server", "gamegym", true], ["server", "gamegym.contrib", true], ["server", "gamegym.contrib.server", true], ["shape_index", "gamegym.adapter.TensorAdapter", false], ["shape_index", "gamegym.games.atpg.Asymetric3PlayerGomoku.TensorAdapter", false], ["shorten_str", "gamegym.utils", false], ["show_board", "gamegym.games.atpg.Asymetric3PlayerGomoku", false], ["show_board", "gamegym.games.gomoku.Gomoku", false], ["show_history", "gamegym.contrib.server.server.Server", false], ["show_situation", "gamegym.games.gomoku.Gomoku", false], ["single_action", "gamegym.strategy.ConstStrategy", false], ["single_value", "gamegym.utils.Distribution", false], ["situation", "gamegym", true], ["stack", "gamegym.nested", false], ["start", "gamegym.game.Game", false], ["state", "gamegym.situation.Situation", false], ["state_distribution", "gamegym.algorithms.infosets.InformationSetSampler", false], ["state_features", "gamegym.estimator.EstimatorAdapter", false], ["stats", "gamegym.algorithms", true], ["stats", "gamegym.algorithms.mcts.buffer.ReplayBuffer", false], ["store", "gamegym.utils", false], ["strategy", "gamegym", true], ["strategy", "gamegym.algorithms.mcts", true], ["strategy_trace", "gamegym.contrib", true], ["text_to_svg", "gamegym.ui.tree", false], ["to_dict", "gamegym.ui.tree.TreeNode", false], ["to_dicts", "gamegym.algorithms.tournament.GameResults", false], ["to_xml", "gamegym.contrib.server.ui.Element", false], ["tournament", "gamegym.algorithms", true], ["tournament_pairings", "gamegym.algorithms.tournament.GameResults", false], ["train_model", "gamegym.algorithms.mcts.alphazero.AlphaZero", false], ["traverse", "gamegym.ui.tree.TreeNode", false], ["tree", "gamegym.ui", true], ["ui", "gamegym", true], ["ui", "gamegym.contrib.server", true], ["uniform", "gamegym.utils", false], ["update", "gamegym.contrib.value_learning.valuestore.LinearValueStore", false], ["update_entry", "gamegym.algorithms.mccfr.RegretStrategy", false], ["update_state", "gamegym.game.Game", false], ["update_state", "gamegym.game.SimultaneousGame", false], ["update_state", "gamegym.games.atpg.Asymetric3PlayerGomoku", false], ["update_state", "gamegym.games.dicepoker.DicePoker", false], ["update_state", "gamegym.games.gomoku.Gomoku", false], ["update_state", "gamegym.games.goofspiel.Goofspiel", false], ["update_state", "gamegym.games.onecardpoker.OneCardPoker", false], ["update_value", "gamegym.algorithms.mcts.search.MctsNode", false], ["update_values", "gamegym.contrib.features.LinearSuccinctStore", false], ["update_values", "gamegym.contrib.features.TabularStore", false], ["update_values", "gamegym.contrib.features.ValueStore", false], ["updated", "gamegym.situation.Situation", false], ["utils", "gamegym", true], ["vals", "gamegym.utils.Distribution", false], ["value", "gamegym.algorithms.mcts.search.MctsNode", false], ["value_for_player", "gamegym.algorithms.mcts.search.MctsNode", false], ["value_full_sgd", "gamegym.contrib.value_learning", true], ["value_learning", "gamegym.contrib", true], ["valuelp", "gamegym.contrib.value_learning", true], ["valuesgd", "gamegym.contrib.value_learning", true], ["valuestore", "gamegym.contrib.value_learning", true], ["write_dot", "gamegym.algorithms.mcts.search.MctSearch", false], ["write_efg", "gamegym.contrib.gambit", false], ["xtest_server", "gamegym.contrib.server.server", false]]');
    $("#search").autocomplete({
    source: NEDOC_MODULES.map(function(i) { return { label: i[0], desc: i[1], fulllink: i[2] }; }),
    select: function(event, ui) {
        if (ui.fulllink) {
            window.location.href = ui.item.desc + "." + ui.item.label + ".html";
        } else {
            window.location.href = ui.item.desc + ".html#" + ui.item.label;
        }
    },
    }).autocomplete("instance")._renderItem = function(ul, item) {
        return $("<li>")
            .append("<div><b>" + item.label + "</b><br>" + item.desc + "</div>")
            .appendTo(ul);
    };

    $(".fexpand").on("click", function(event) {
        event.preventDefault();
        var elem = $(this);
        var parent = elem.closest(".fn");
        var fdetail = parent.children(".fdetail");
        fdetail.toggle(200, "swing", function() {
            var is_visible = fdetail.is(':visible');
            var toggle = elem.parent().children(".ftoggle");
            var toggle2 = elem.parent().children(".ftoggle-empty");
            if (is_visible) {
                toggle.html("&#9660;");
                toggle2.html("&#9661;");
            } else {
                toggle.html("&#9654;");
                toggle2.html("&#9655;");
            }
        });
    })

    if(window.location.hash) {
        var name = window.location.hash.slice(3); // remove #f_ prefix
        var elem = $("#fn_" + name);
        elem.toggle(0);
        elem.parent().parent().css("backgroundColor", "#e9f6ff");
    }
});
